NAME - Rishu Raj                            SUBJECT - PBLJ
UID - 22BCS15617                            DOP - 23-01-25
SEC- 631-B

1.Write a Java program to calculate the square root of a number entered by the user. Use try-catch to handle invalid inputs (e.g., negative numbers or non-numeric values).  
CODE:-
import java.util.Scanner;
public class SquareRootCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number to calculate its square root: ");
        try {
            // Read the input from the user
            String input = scanner.nextLine();
            // Try to convert the input to a double
            double number = Double.parseDouble(input);
            // Check if the number is negative
            if (number < 0) {
                throw new ArithmeticException("Negative numbers cannot have a real square root.");
            }
            // Calculate the square root
            double squareRoot = Math.sqrt(number);
            System.out.println("The square root of " + number + " is " + squareRoot);
        } catch (NumberFormatException e) {
            System.out.println("Invalid input. Please enter a valid number.");
        } catch (ArithmeticException e) {
            System.out.println(e.getMessage());
        } finally {
            scanner.close();
        }
    }
}

OUTPUT:- 
Enter a number to calculate its square root: 25
The square root of 25.0 is 5.0
Enter a number to calculate its square root: abc
Invalid input. Please enter a valid number.
Enter a number to calculate its square root: -16
Negative numbers cannot have a real square root.

2.Write a Java program to simulate an ATM withdrawal system. The program should:
Ask the user to enter their PIN.
Allow withdrawal if the PIN is correct and the balance is sufficient.
Throw exceptions for invalid PIN or insufficient balance.
Ensure the system always shows the remaining balance, even if an exception occurs.

CODE:-
import java.util.Scanner;
class InvalidPinException extends Exception {
    public InvalidPinException(String message) {
        super(message);
    }
}
class InsufficientBalanceException extends Exception {
    public InsufficientBalanceException(String message) {
        super(message);
    }
}
public class ATMSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        // Predefined correct PIN and initial balance
        String correctPin = "1234";
        double balance = 5000.0;  // Initial balance in the account
        // Get the user's PIN input
        System.out.print("Enter your PIN: ");
        String enteredPin = scanner.nextLine();
        try {
            // Check if the entered PIN is correct
            if (!enteredPin.equals(correctPin)) {
                throw new InvalidPinException("Invalid PIN entered.");
            }
            // Ask for withdrawal amount
            System.out.print("Enter the withdrawal amount: ");
            double withdrawalAmount = scanner.nextDouble();
            // Check if there is sufficient balance
            if (withdrawalAmount > balance) {
                throw new InsufficientBalanceException("Insufficient balance to complete the withdrawal.");
            }
            // Process the withdrawal
            balance -= withdrawalAmount;
            System.out.println("Withdrawal successful! You withdrew: $" + withdrawalAmount);
        } catch (InvalidPinException | InsufficientBalanceException e) {
            System.out.println(e.getMessage());
        } finally {
            // Show the remaining balance, even if there was an exception
            System.out.println("Remaining balance: $" + balance);
        }
        scanner.close();
    }
}

OUTPUT:- 
Enter your PIN: 1234
Enter the withdrawal amount: 2000
Withdrawal successful! You withdrew: $2000.0
Remaining balance: $3000.0

Enter your PIN: 0000
Invalid PIN entered.
Remaining balance: $5000.0

Enter your PIN: 1234
Enter the withdrawal amount: 6000
Insufficient balance to complete the withdrawal.
Remaining balance: $5000.0
